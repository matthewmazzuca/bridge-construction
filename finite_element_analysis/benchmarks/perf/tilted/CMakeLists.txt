###  CMakeLists.txt ---

#  Author(s): Christophe Prud'homme <christophe.prudhomme@ujf-grenoble.fr>
#       Date: 2010-06-12
#
#  Copyright (C) 2010 Universite Joseph Fourier (Grenoble I)
#
# Distributed under the GPL(GNU Public License):
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#
include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
add_custom_target(gen_feel_perf_tilted ALL )

foreach(S "Hypercube")
foreach(P "Lagrange")
foreach(D 2)
  foreach(N 1 2 3)
    set( LAG "// this file is automatically generated
#include <tilted.hpp>
#include <feel/feelpoly/lagrange.hpp>
namespace Feel {
  template class Tilted<${D}, ${P}<${N}>, ${S}>\\;
}
")
    OVERWITE_IF_DIFFERENT(gen_feel_perf_tilted "feel_perf_tilted_${S}_${D}D_${P}_${N}.cpp" "${LAG}" tilted.hpp)
    set(lagrange "${CMAKE_CURRENT_BINARY_DIR}/feel_perf_tilted_${S}_${D}D_${P}_${N}.cpp;${lagrange}")
  endforeach()
endforeach()
endforeach()
endforeach()

foreach(S "Hypercube" )
foreach(P "CrouzeixRaviart")
foreach(D 2)
  foreach(N 1 )
    set( LAG "// this file is automatically generated
#include <tilted.hpp>
#include <feel/feelpoly/crouzeixraviart.hpp>
namespace Feel {
  template class Tilted<${D}, ${P}<${N}>, ${S}>\\;
}
")
    OVERWITE_IF_DIFFERENT(gen_feel_perf_tilted "feel_perf_tilted_${S}_${D}D_${P}_${N}.cpp" "${LAG}" tilted.hpp)
    set(cr "${CMAKE_CURRENT_BINARY_DIR}/feel_perf_tilted_${S}_${D}D_${P}_${N}.cpp;${cr}")
  endforeach()
endforeach()
endforeach()
endforeach()

feelpp_add_application( perf_tilted_1 SRCS bench.cpp ${lagrange} ${cr}
  MESH tilted1.msh tilted2.msh tilted3.msh tilted4.msh tilted5.msh tilted6.msh
  CFG tilted.cfg LINK_LIBRARIES ${FEELPP_LIBRARIES} DEFS FEELPP_SOLUTION_1 DEPS gen_feel_perf_tilted)
feelpp_add_application( perf_tilted_2 SRCS bench.cpp ${lagrange} ${cr} CFG tilted.cfg LINK_LIBRARIES ${FEELPP_LIBRARIES} DEFS FEELPP_SOLUTION_2 DEPS gen_feel_perf_tilted)
feelpp_add_application( perf_tilted_3 SRCS bench.cpp ${lagrange} ${cr} CFG tilted.cfg LINK_LIBRARIES ${FEELPP_LIBRARIES} DEFS FEELPP_SOLUTION_3 DEPS gen_feel_perf_tilted)


